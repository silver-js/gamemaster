{"name":"test game","author":"silver","version":0.1,"code":["// Layers Setup\n\nconst layer1 = gfx.iBuffer();\nconst layer2 = gfx.iBuffer();\nconst layer3 = gfx.sBuffer();\n\nconst drawPipeline = ()=>{ \n  gfx.clear();\n  layer1.draw();\n  layer2.draw();\n}","// init\n\nlet loaded = false;     // since sprites are loaded asyncronously, you should have a loading state.\nlet arcFrame = 0;\nlet spr;\n\n\n// this is a commented code\n/*\nconst loader = async () => {\n  try{\n    spr = await gfx.loadAtlas('tileset_1_1.png', 16, 2, 1, 1, 1, 1);\n    const vShader = await layer3.vShader('./vsData.txt');\n    if(vShader){\n      const fShader = await layer3.fShader('./fsData.txt');\n      if(fShader){\n        const program = layer3.newProgram(vShader,fShader);\n        layer3.useProgram(program);\n        loaded = true;\n      }\n    }\n  }\n  catch(err){\n    console.log('error:' , err)\n  }\n}\nloader();\n*/","","","// draw loop\n\n_loop.draw = ()=> {\n  // layer1\n  arcFrame = (arcFrame + 10) % 360;\n  layer1.clear();\n  layer1.color('#99f');\n  layer1.arc(60, 60, 40, 0, 360);\n  layer1.color('#00f');\n  layer1.arc(60,60,40,arcFrame + 30, arcFrame + 60);\n  layer1.lineColor('#f0f');\n  layer1.lineArc(60,60,44, 270, arcFrame + 45);\n\n  layer1.color('#f00');\n  layer1.rect(100,100,60,60);\n  layer1.lineColor('#0f0');\n  layer1.lineRect(110,110,60,60);\n  \n  layer1.textAlign('left');\n  layer1.font('32px courier');\n  layer1.lineColor('#fff');\n  layer1.lineText('left aligned test text...' + arcFrame/10, 0, 0);\n\n  layer1.textAlign('center');\n  layer1.font('italic 24px verdana');\n  layer1.text('centered test text lol', 320,32);\n\n\n  layer1.color('#95f');\n  layer1.figure(\n    200, 100,\n    220, 140,\n    270, 140,\n    230, 180,\n    250, 230,\n    200, 200,\n    150, 230,\n    170, 180,\n    130, 140,\n    180, 140\n  );\n  layer1.lineColor('#369');\n  layer1.lines(300, 200, 240, 140, 180, 200, 300,200);\n\n\n  // layer2:\n  if(loaded){\n    layer2.clear();\n    layer2.color('#fff');\n    layer2.text('data loaded', 300,100);\n    layer2.img(spr[1],300,120);\n    layer2.img(spr[30],332,152);\n    layer2.img(spr[104],300,184);\n    layer2.img(spr[103],300,216);\n    \n    layer2.img2(spr[8],364,216, 32,64);\n\n    layer2.img3(spr[9],arcFrame,420,200,64,64);\n  }\n  drawPipeline();\n}\nconsole.log('test ok');\n"],"maps":[],"gfx":[],"sfx":[]}