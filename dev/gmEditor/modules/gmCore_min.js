const e=new Float64Array(3),t=new Float32Array(2).fill(100/3);export const _loop={update:()=>{},draw:()=>{}};function n(){this.axis=new Float32Array(4),this.btn=new Uint8ClampedArray(8)}export const _pad=[];for(let e=0;e<5;e++)_pad.push(new n);const o=[];let s,a=!1;const d=new Float32Array(2),i=e=>e.preventDefault(),c=e=>{_pad[0].btn[e.button]=255},r=e=>{e.preventDefault(),e.deltaY>=0?(_pad[0].btn[4]=255,o.push([0,4])):(_pad[0].btn[5]=255,o.push([0,5]))},p=e=>{if(document.pointerLockElement)return d[0]+=e.movementX/s.offsetWidth*2,d[1]+=e.movementY/s.offsetWidth*2,void _pad[0].axis.set([d[0],d[1]],2);a||_pad[0].axis.set([e.offsetX/s.offsetWidth*2-1,e.offsetY/s.offsetHeight*2-1],2)},l=e=>{_pad[0].axis[2]*=1.2,_pad[0].axis[3]*=1.2};let f;const m=()=>{s.requestPointerLock()},u=new Float32Array(4),v=e=>(e.changedTouches[0].pageX-s.offsetLeft)/s.offsetWidth*2-1,h=e=>(e.changedTouches[0].pageY-s.offsetTop)/s.offsetHeight*2-1,b=[],x={};let _=1;const w=e=>{e.cancelable&&e.preventDefault(),_=s.offsetHeight/s.offsetWidth;const t=v(e),n=h(e);((e,t,n)=>{const o=b.find((n=>!(n.x>e||n.x+n.w<e||n.y>t||n.y+n.h<t)));o&&(x[n]=o)})(t,n,e.changedTouches[0].identifier);const o=x[e.changedTouches[0].identifier];if(o)switch(o.t){case"btn":_pad[0].btn[o.m]=255;break;case"stick":o.oX=t,o.oY=n,_pad[0].axis[o.m[0]]=0,_pad[0].axis[o.m[1]]=0;break;case"swipe":o.oX=t,o.oY=n}else _pad[0].btn[3]=255,a?u.set([t,n,t,n]):_pad[0].axis.set([t,n],2)},L=e=>{e.preventDefault();const t=x[e.changedTouches[0].identifier];if(t)switch(t.t){case"stick":_pad[0].axis[t.m[0]]=5*Math.max(-.2,Math.min(v(e)-t.oX,.2)),_pad[0].axis[t.m[1]]=5*Math.max(-.2,Math.min((h(e)-t.oY)*_,.2));break;case"swipe":_pad[0].btn[t.m[0]]=(h(e)-t.oY)*_>.1?255:0,_pad[0].btn[t.m[1]]=v(e)-t.oX>.1?255:0,_pad[0].btn[t.m[2]]=v(e)-t.oX<-.1?255:0,_pad[0].btn[t.m[3]]=(h(e)-t.oY)*_<-.1?255:0}else{if(a)return _pad[0].axis.set([2*(v(e)-u[0]),2*(h(e)-u[1])],2),void u.set([v(e),h(e)],2);_pad[0].axis.set([v(e),h(e)],2)}},E=e=>{e.cancelable&&e.preventDefault(),u.set([0,0]);const t=x[e.changedTouches[0].identifier];if(t){switch(t.t){case"btn":_pad[0].btn[t.m]=0;break;case"stick":_pad[0].axis[t.m[0]]=0,_pad[0].axis[t.m[1]]=0;break;case"swipe":_pad[0].btn[t.m[0]]=0,_pad[0].btn[t.m[1]]=0,_pad[0].btn[t.m[2]]=0,_pad[0].btn[t.m[3]]=0}return t.c>=0&&v(e)==t.oX&&h(e)==t.oY&&(_pad[0].btn[t.c]=255,o.push([0,t.c])),void delete x[e.changedTouches[0].identifier]}_pad[0].btn[3]=0};let g=!0;const k=[],y={KeyW:[1,"axis",1,!0],KeyA:[1,"axis",0,!0],KeyS:[1,"axis",1],KeyD:[1,"axis",0],KeyN:[1,"btn",0],KeyM:[1,"btn",1],Space:[1,"btn",2],AltLeft:[1,"btn",3],KeyQ:[1,"btn",4],KeyE:[1,"btn",5],Tab:[1,"btn",6],Enter:[1,"btn",7]},T={F10:()=>g=!g},Y=e=>{let t;for(let e=k.length-1;e>=0;e--)if(t=y[k[e]],t)switch(t[1]){case"btn":_pad[t[0]].btn[t[2]]=255;break;case"axis":_pad[t[0]].axis[t[2]]=t[3]?-1:1}},A=[null,null,null,null];let X=0;const D=e=>{if(A.findIndex((e=>null==e))>=0){for(;null!=A[X];)X=(X+1)%4;A[X]=e,console.log(`connected to slot ${X+1}`),X=(X+1)%4}else console.log("no more gamepad slots available")},K=e=>{const t=A.findIndex((t=>t==e));t>=0&&(A[t]=null)};let F=0;const M=()=>{for(const e of navigator.getGamepads())if(e){e.buttons[8].pressed&&e.buttons[9].pressed&&F<performance.now()&&(K(e.index),D(e.index),F=performance.now()+250);const t=A.findIndex((t=>t==e.index));if(t>=0){for(let n=0;n<4;n++)_pad[t+1].axis[n]=e.axes[n];for(let n=0;n<6;n++)_pad[t+1].btn[n]=e.buttons[n].pressed?255:0;for(let n=8;n<10;n++)_pad[t+1].btn[n-2]=e.buttons[n].pressed?255:0}}},W=()=>{document.pointerLockElement?(s.removeEventListener("mousewheel",r),window.addEventListener("mousewheel",r,{passive:!1})):(s.addEventListener("mousewheel",r),window.removeEventListener("mousewheel",r))};window.addEventListener("mouseup",(e=>{_pad[0].btn[e.button]=0})),document.addEventListener("pointerlockchange",W),window.addEventListener("keydown",(e=>{if(T[e.code])return e.preventDefault(),void T[e.code]();g&&e.preventDefault(),k.find((t=>t==e.code))||k.unshift(e.code)})),window.addEventListener("keyup",(e=>{const t=k.findIndex((t=>t==e.code));if(t>=0){e.preventDefault(),k.splice(t,1);const n=y[e.code];n&&(_pad[n[0]][n[1]][n[2]]=0)}})),window.addEventListener("gamepadconnected",(e=>{console.log(e.gamepad.buttons[0]),console.log(`${e.gamepad.id} detected.`),D(e.gamepad.index)})),window.addEventListener("gamepaddisconnected",(e=>{K((t=>t==e.gamepad.index)),console.log(`${e.gamepad.id} disconnected.`,A)}));const I=()=>{for(let e=o.length;e>0;e--){const e=o.pop();_pad[e[0]].btn[e[1]]=0}a&&(d.set([0,0]),u.set([u[2],u[3]]),_pad[0].axis.set([0,0],2))},H=()=>{for(e[2]=performance.now();e[0]<e[2];)M(),Y(),_loop.update(),I(),e[0]+=t[0];if(e[1]<e[2])for(_loop.draw();e[1]<e[2];)e[1]+=t[1];setTimeout(H)};H();export const _cfg={setClock:e=>{t[0]=1e3/e},setFps:e=>{t[1]=1e3/e},pointerTarget:e=>{(e=>{s&&(s.removeEventListener("mousewheel",r),s.removeEventListener("mouseleave",l),s.removeEventListener("mousemove",p),s.removeEventListener("contextmenu",i),s.removeEventListener("mousedown",c),s.removeEventListener("touchstart",w),s.removeEventListener("touchmove",L),s.removeEventListener("touchend",E),s.removeEventListener("touchcancel",E)),s=e,W(),e.addEventListener("mouseleave",l),e.addEventListener("mousemove",p),e.addEventListener("contextmenu",i),e.addEventListener("mousedown",c),e.addEventListener("touchstart",w),e.addEventListener("touchmove",L),e.addEventListener("touchend",E),e.addEventListener("touchcancel",E)})(e)},pointerLock:e=>{a=!!e,e?(f&&f.removeEventListener("click",m),f=s,s.addEventListener("click",m),console.log("pointerLock on")):(f&&f.removeEventListener("click",m),document.exitPointerLock(),console.log("pointerLock off"))},tpAdd:(e,t,n,o,s,a,d)=>{b.push({x:e,y:t,w:n,h:o,t:s,m:a,c:d,oX:0,oY:0})},tpRemove:(e,t)=>{const n=b.findIndex((n=>n.x===e&&n.y===t));n>=0&&b.splice(n,1)},getKbMap:()=>y,kbAdd:(...e)=>{e.forEach((e=>{y[e.key]=e.map}))},kbRemove:(...e)=>{e.forEach((e=>{delete y[e]}))}};
