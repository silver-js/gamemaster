'gfx.js'

/*
This module manages the game graphics.
Base Canvas size is 640x360, but you can set a multiplier to make it 720p, 1080p and so on.
This module renders sprites and fonts directly from the gpu for better performance
*/

## Concept:

'The gfx module works mainly on webgl2, this means it needs a little more setup than a normal 2d canvas element, but it is much faster'


'Usage'

// importing module:
import _gfx from './gfx_min.js';

// setup:
_gfx.res(2);        // res scale multiplayer, (640 * m) x (360 * m), up to m = 6 (3840x2160)
_gfx.motionBlur(x); // sets the motion blur value from 1 to 0, where 1 is "no motion blur".


// fonts:
/*
  _gfx comes with 3 preloaded fonts ("sans-serif" 0, "times-new-roman" 1, "couerier-new" 2)
  if you want to use another font,
  you need to load it on the html,
  when it's loaded call the localFont function and select an id for your font.
  you can have up to 4 fonts, from 0 to 3.
*/
_gfx.localFont(1, "myFont");


// atlas:
/*
  similar to fonts, you can load texture atlases with the function loadAtlas,
  loadAtlas accepts url, preferably datauri.
  you can have up to 4 atlases, from 0 to 3.
*/
_gfx.loadAtlas(0, my_atlas_url, tile_size_in_px);


// rendering
/*
  when drawing, you are actually building a list of textured polygons, 
  and at the end of your draw loop you render them all at once with the draw() method.
*/
_gfx.color(r,g,b,a);    // sets colors, values from 0 to 255;
_gfx.lineWidth(x);      // sets the line width;
_gfx.font(id);          // sets the active font;


// drawing functions:
_gfx.lines(x1,y1, x2,y2, x3, y3....);   // lets you draw a line with as many points as you want
_gfx.rect(
  x, y, w, h,
  sX, sY,         // optional, rotation angles
  scaleX, scaleY  // optional, vertical and horizontal stretching
);
_gfx.text(
  txt, x, y,
  w, h, sX, sY, scaleX  // optional
);
_gfx.spr(
  aId, iId,               // atlasId, spriteId
  x, y,
  w, h,                   // optional, default 32x
  sX, sY, scaleX, scaleY  // optional
);

draw();                   // renders all sprites, try to call it once per frame.

